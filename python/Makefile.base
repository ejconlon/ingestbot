# Do not import this directly - use `Makefile.app` or `Makefile.lib` instead.
# All common build tasks can be invoked by targets here.
# For example, to setup the virtual environment, use `make install`.
# Then `make test` to lint, typecheck, and unit test.

.PHONY: default
default:
	echo "No default target"

# Remove frozen dependencies for a fresh pipcompile
.PHONY: pipclean
pipclean:
	rm -f requirements.txt dev-requirements.txt

# Create the virtual environment
.PHONY: install
install:
	python3 -m venv --upgrade-deps .venv
	.venv/bin/python3 -m pip --cache-dir ../../.pipcache install wheel
	.venv/bin/python3 -m pip --cache-dir ../../.pipcache install -r dev-requirements.txt

# Format - for now just sort imports
.PHONY: format
format:
	.venv/bin/python3 -m isort --settings-path=../../python/setup.cfg $(COMPONENT_NAME)

# Typecheck with mypy
.PHONY: typecheck
typecheck:
	.venv/bin/python3 -m mypy -p $(COMPONENT_NAME)

# Lint with flake8
.PHONY: lint
lint:
	.venv/bin/python3 -m flake8 --config=../../python/setup.cfg $(COMPONENT_NAME)

# Unit test with pytest
.PHONY: unit
unit:
	if [ -d tests ]; then .venv/bin/python3 -m pytest tests; fi

# Run all tests
.PHONY: test
test: lint typecheck unit

# Clean most generated files (+ venv)
.PHONY: clean
clean:
	rm -rf .venv .mypy_cache .pytest_cache *.egg-info
